#!/bin/bash
set -e
export PATH=$PATH:/var/vcap/packages/cli

#where to deploy the cf apps
CF_API_URL='<%= p("cf.api_url") %>'
CF_USERNAME='<%= p("cf.username") %>'
CF_PASSWORD='<%= p("cf.password") %>'
CF_ORG='<%= p("cf.org") %>'
CF_DEFAULT_SPACE='<%= p("cf.default_space") %>'
CF_TARGET_SPACE='<%= p("cf.target_space") %>'


CF_APP_NAME='<%= p("cf.appname") %>'
CF_DOMAIN='<%= p("cf.domain") %>'


#cf app props
DATAFLOW_CF_API_URL='<%= p("cf.api_url") %>'
DATAFLOW_CF_USERNAME='<%= p("cf.username") %>'
DATAFLOW_CF_PASSWORD='<%= p("cf.password") %>'
DATAFLOW_CF_ORG='<%= p("cf.org") %>'
DATAFLOW_CF_TARGET_SPACE='<%= p("cf.target_space") %>'
DATAFLOW_CF_DOMAIN='<%= p("cf.domain") %>'


cf login -a $CF_API_URL  -u $CF_USERNAME -p $CF_PASSWORD  -o $CF_ORG -s $CF_DEFAULT_SPACE --skip-ssl-validation

cf create-space $CF_TARGET_SPACE
cf target -s $CF_TARGET_SPACE
cf push $CF_APP_NAME  -p /var/vcap/packages/dataflow-server-pkg/spring-cloud-dataflow.jar -b java_buildpack -i 1 --no-start --no-route -t 120

#map the route on specified domain
cf map-route $CF_APP_NAME $CF_DOMAIN --hostname $CF_APP_NAME  


#set cf env properties
cf set-env $CF_APP_NAME JAVA_OPTS "-Djava.security.egd=file:/dev/urandom"


# the root domain to use when mapping routes
#SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_DOMAIN: cfapi.itn.ftgroup
# Comma separated set of service instance names to bind to the deployed app
#SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SERVICES: dataflow-rabbit,dataflow-mysql

cf set-env $CF_APP_NAME SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_API_ENDPOINT $DATAFLOW_CF_API_URL 
cf set-env $CF_APP_NAME SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_USERNAME $DATAFLOW_CF_USERNAME
cf set-env $CF_APP_NAME SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_PASSWORD $DATAFLOW_CF_PASSWORD
cf set-env $CF_APP_NAME SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_ORGANIZATION $DATAFLOW_CF_ORG
cf set-env $CF_APP_NAME SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SPACE $DATAFLOW_CF_TARGET_SPACE
cf set-env $CF_APP_NAME SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_DOMAIN $DATAFLOW_CF_DOMAIN
cf set-env $CF_APP_NAME SPRING_CLOUD_DEPLOYER_CLOUDFOUNDRY_SKIP_SSL_VALIDATION true


cf set-env dataflow-server SECURITY_BASIC_ENABLED false

#todo template basic oauth or use Oauth2 login
cf set-env dataflow-server SECURITY_USER_NAME admin
cf set-env dataflow-server SECURITY_USER_PASSWORD xxxxx


#start cf app
cf start $CF_APP_NAME
cf restage $CF_APP_NAME

